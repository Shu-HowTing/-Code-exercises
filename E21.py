# -*- coding: utf-8 -*-
# Author: 小狼狗
一个未排序整数数组，有正负数，重新排列使负数排在正数前面，并且要求不改变原来的正负数之间相对顺序
比如： input: 1, 7, -5, 9, -12, 15
ans: -5, -12, 1, 7, 9, 15
要求时间复杂度O(N), 空间O(1) 。（此题一直没看到令我满意的答案，一般达不到题目所要求的：时间复杂度O(N), 空间O(1)，且保证原来正负数之间的相对位置不变）。
updated：设置一个起始点j, 一个翻转点k, 一个终止点L
从右侧起
起始点在第一个出现的负数, 翻转点在起始点后第一个出现的正数, 终止点在翻转点后出现的第一个负数(或结束)
如果无翻转点, 则不操作
如果有翻转点, 则待终止点出现后, 做翻转, 即ab = > ba
这样的操作
翻转后, 负数串一定在左侧, 然后从负数串的右侧开始记录起始点, 继续往下找下一个翻转点

例子中的就是

1, 7, -5, 9, -12, 15
第一次翻转: 1, 7, -5, -12, 9, 15 = > 1, -12, -5, 7, 9, 15
第二次翻转: -5, -12, 1, 7, 9, 15